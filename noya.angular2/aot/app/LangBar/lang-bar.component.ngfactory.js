/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../../app/LangBar/lang-bar.component');
var import1 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import4 = require('@angular/core/src/metadata/view');
var import5 = require('@angular/core/src/linker/view_type');
var import6 = require('@angular/core/src/change_detection/constants');
var import7 = require('@angular/core/src/linker/component_factory');
var import8 = require('../../../app/services/services');
var import9 = require('./lang-bar.component.css.shim.ngstyle');
var import10 = require('@angular/core/src/animation/animation_transition');
var import11 = require('@angular/core/src/animation/animation_sequence_player');
var import12 = require('@angular/core/src/animation/animation_styles');
var import13 = require('@angular/core/src/animation/animation_style_util');
var import14 = require('@angular/core/src/animation/animation_keyframe');
var import15 = require('@angular/core/src/animation/animation_player');
var import16 = require('../../node_modules/@angular/common/src/directives/ng_class.ngfactory');
var import17 = require('@angular/core/src/change_detection/change_detection_util');
var import18 = require('@angular/core/src/change_detection/differs/iterable_differs');
var import19 = require('@angular/core/src/change_detection/differs/keyvalue_differs');
var import20 = require('@angular/core/src/linker/element_ref');
var import21 = require('@angular/common/src/directives/ng_class');
var Wrapper_LangBarComponent = (function () {
    function Wrapper_LangBarComponent(p0, p1) {
        this._changed = false;
        this.context = new import0.LangBarComponent(p0, p1);
    }
    Wrapper_LangBarComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_LangBarComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_LangBarComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_LangBarComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_LangBarComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_LangBarComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_LangBarComponent;
}());
exports.Wrapper_LangBarComponent = Wrapper_LangBarComponent;
var renderType_LangBarComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_LangBarComponent_Host0 = (function (_super) {
    __extends(View_LangBarComponent_Host0, _super);
    function View_LangBarComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_LangBarComponent_Host0, renderType_LangBarComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_LangBarComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'lang-bar', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_LangBarComponent0(this.viewUtils, this, 0, this._el_0);
        this._LangBarComponent_0_3 = new Wrapper_LangBarComponent(this.injector(0), this.injectorGet(import8.CacheManager, this.parentIndex));
        this.compView_0.create(this._LangBarComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._LangBarComponent_0_3.context);
    };
    View_LangBarComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.LangBarComponent) && (0 === requestNodeIndex))) {
            return this._LangBarComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_LangBarComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._LangBarComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_LangBarComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_LangBarComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_LangBarComponent_Host0;
}(import1.AppView));
exports.LangBarComponentNgFactory = new import7.ComponentFactory('lang-bar', View_LangBarComponent_Host0, import0.LangBarComponent);
var styles_LangBarComponent = [import9.styles];
var LangBarComponent_isLangBarOpenRTL_states = {
    '0': {},
    '1': {},
    'true': { 'transform': 'translateX(0)' },
    'false': { 'transform': 'translateX(-28px)' },
    '*': {}
};
function LangBarComponent_isLangBarOpenRTL_factory(view, element, currentState, nextState) {
    var previousPlayers = view.animationContext.getAnimationPlayers(element, ((nextState == 'void') ? null : 'isLangBarOpenRTL'));
    var collectedStyles = {};
    var player = null;
    var totalTime = 0;
    var defaultStateStyles = LangBarComponent_isLangBarOpenRTL_states['*'];
    var startStateStyles = LangBarComponent_isLangBarOpenRTL_states[currentState];
    if ((startStateStyles == null)) {
        (startStateStyles = defaultStateStyles);
    }
    var endStateStyles = LangBarComponent_isLangBarOpenRTL_states[nextState];
    if ((endStateStyles == null)) {
        (endStateStyles = defaultStateStyles);
    }
    if (((player == null) && ((currentState == '0') && (nextState == '1')))) {
        player = new import11.AnimationSequencePlayer([view.renderer.animate(element, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(-28px)' }]))),
                new import14.AnimationKeyframe(0.3, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(15px)' }]))),
                new import14.AnimationKeyframe(1, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(0)' }])))
            ], 300, 0, null, previousPlayers)]);
        totalTime = 300;
    }
    if (((player == null) && ((currentState == '1') && (nextState == '0')))) {
        player = new import11.AnimationSequencePlayer([view.renderer.animate(element, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(0)' }]))),
                new import14.AnimationKeyframe(0.7, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(15px)' }]))),
                new import14.AnimationKeyframe(1, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(-28px)' }])))
            ], 300, 0, null, previousPlayers)]);
        totalTime = 300;
    }
    if ((player == null)) {
        (player = new import15.NoOpAnimationPlayer());
    }
    player.onDone(function () {
        player.destroy();
        import13.renderStyles(element, view.renderer, import13.prepareFinalAnimationStyles(startStateStyles, endStateStyles));
    });
    new import11.AnimationSequencePlayer(previousPlayers).destroy();
    import13.renderStyles(element, view.renderer, import13.clearStyles(startStateStyles));
    view.animationContext.queueAnimation(element, 'isLangBarOpenRTL', player);
    return new import10.AnimationTransition(player, currentState, nextState, totalTime);
}
var LangBarComponent_isLangBarOpenLTR_states = {
    '0': {},
    '1': {},
    'true': { 'transform': 'translateX(0)' },
    'false': { 'transform': 'translateX(28px)' },
    '*': {}
};
function LangBarComponent_isLangBarOpenLTR_factory(view, element, currentState, nextState) {
    var previousPlayers = view.animationContext.getAnimationPlayers(element, ((nextState == 'void') ? null : 'isLangBarOpenLTR'));
    var collectedStyles = {};
    var player = null;
    var totalTime = 0;
    var defaultStateStyles = LangBarComponent_isLangBarOpenLTR_states['*'];
    var startStateStyles = LangBarComponent_isLangBarOpenLTR_states[currentState];
    if ((startStateStyles == null)) {
        (startStateStyles = defaultStateStyles);
    }
    var endStateStyles = LangBarComponent_isLangBarOpenLTR_states[nextState];
    if ((endStateStyles == null)) {
        (endStateStyles = defaultStateStyles);
    }
    if (((player == null) && ((currentState == '0') && (nextState == '1')))) {
        player = new import11.AnimationSequencePlayer([view.renderer.animate(element, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(28px)' }]))),
                new import14.AnimationKeyframe(0.3, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(-15px)' }]))),
                new import14.AnimationKeyframe(1, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(0)' }])))
            ], 300, 0, null, previousPlayers)]);
        totalTime = 300;
    }
    if (((player == null) && ((currentState == '1') && (nextState == '0')))) {
        player = new import11.AnimationSequencePlayer([view.renderer.animate(element, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(0)' }]))),
                new import14.AnimationKeyframe(0.7, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(-15px)' }]))),
                new import14.AnimationKeyframe(1, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{ 'transform': 'translateX(28px)' }])))
            ], 300, 0, null, previousPlayers)]);
        totalTime = 300;
    }
    if ((player == null)) {
        (player = new import15.NoOpAnimationPlayer());
    }
    player.onDone(function () {
        player.destroy();
        import13.renderStyles(element, view.renderer, import13.prepareFinalAnimationStyles(startStateStyles, endStateStyles));
    });
    new import11.AnimationSequencePlayer(previousPlayers).destroy();
    import13.renderStyles(element, view.renderer, import13.clearStyles(startStateStyles));
    view.animationContext.queueAnimation(element, 'isLangBarOpenLTR', player);
    return new import10.AnimationTransition(player, currentState, nextState, totalTime);
}
var renderType_LangBarComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.Emulated, styles_LangBarComponent, {
    'isLangBarOpenRTL': LangBarComponent_isLangBarOpenRTL_factory,
    'isLangBarOpenLTR': LangBarComponent_isLangBarOpenLTR_factory
});
var View_LangBarComponent0 = (function (_super) {
    __extends(View_LangBarComponent0, _super);
    function View_LangBarComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_LangBarComponent0, renderType_LangBarComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
        this._expr_18 = import17.UNINITIALIZED;
        this._expr_19 = import17.UNINITIALIZED;
        this._map_20 = import3.pureProxy2(function (p0, p1) {
            return {
                'main-wrp-ltr': p0,
                'main-wrp-rtl': p1
            };
        });
        this._map_21 = import3.pureProxy2(function (p0, p1) {
            return {
                'main-wrp--lang-wrp-ltr': p0,
                'main-wrp--lang-wrp-rtl': p1
            };
        });
        this._map_22 = import3.pureProxy2(function (p0, p1) {
            return {
                'main-wrp--toggle-wrp-ltr': p0,
                'main-wrp--toggle-wrp-rtl': p1
            };
        });
    }
    View_LangBarComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'main-wrp pointer'), null);
        this._NgClass_0_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import19.KeyValueDiffers, this.parentIndex), new import20.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(this._el_0, '\n\n    ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray4(4, 'class', 'main-wrp--lang-wrp', 'id', ''), null);
        this._NgClass_2_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import19.KeyValueDiffers, this.parentIndex), new import20.ElementRef(this._el_2), this.renderer);
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_5 = this.renderer.createText(this._el_4, 'eng', null);
        this._text_6 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_2, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_8 = this.renderer.createText(this._el_7, 'עבר', null);
        this._text_9 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_10 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_11 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'main-wrp--toggle-wrp'), null);
        this._NgClass_11_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import19.KeyValueDiffers, this.parentIndex), new import20.ElementRef(this._el_11), this.renderer);
        this._text_12 = this.renderer.createText(this._el_11, '\n    ', null);
        this._text_13 = this.renderer.createText(this._el_0, '\n\n\n', null);
        this._text_14 = this.renderer.createText(parentRenderNode, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_4, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_4));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_7, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_7));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._text_13,
            this._text_14
        ]), [
            disposable_0,
            disposable_1,
            disposable_2
        ]);
        return null;
    };
    View_LangBarComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import21.NgClass) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._NgClass_2_3.context;
        }
        if (((token === import21.NgClass) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._NgClass_11_3.context;
        }
        if (((token === import21.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 13)))) {
            return this._NgClass_0_3.context;
        }
        return notFoundResult;
    };
    View_LangBarComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_18 = (this.context.isHeb ? this.context.isLangBarOpen : (0 - 1));
        if (import3.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            var animationTransition_isLangBarOpenRTL = this.componentType.animations['isLangBarOpenRTL'](this, this._el_0, ((this._expr_18 == import17.UNINITIALIZED) ? 'void' : this._expr_18), ((currVal_18 == import17.UNINITIALIZED) ? 'void' : currVal_18));
            this._expr_18 = currVal_18;
        }
        var currVal_19 = (this.context.isEng ? this.context.isLangBarOpen : (0 - 1));
        if (import3.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            var animationTransition_isLangBarOpenLTR = this.componentType.animations['isLangBarOpenLTR'](this, this._el_0, ((this._expr_19 == import17.UNINITIALIZED) ? 'void' : this._expr_19), ((currVal_19 == import17.UNINITIALIZED) ? 'void' : currVal_19));
            this._expr_19 = currVal_19;
        }
        var currVal_0_0_0 = 'main-wrp pointer';
        this._NgClass_0_3.check_klass(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this._map_20(this.context.isEng, this.context.isHeb);
        this._NgClass_0_3.check_ngClass(currVal_0_0_1, throwOnChange, false);
        this._NgClass_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_2_0_0 = 'main-wrp--lang-wrp';
        this._NgClass_2_3.check_klass(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this._map_21(this.context.isEng, this.context.isHeb);
        this._NgClass_2_3.check_ngClass(currVal_2_0_1, throwOnChange, false);
        this._NgClass_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_11_0_0 = 'main-wrp--toggle-wrp';
        this._NgClass_11_3.check_klass(currVal_11_0_0, throwOnChange, false);
        var currVal_11_0_1 = this._map_22(this.context.isEng, this.context.isHeb);
        this._NgClass_11_3.check_ngClass(currVal_11_0_1, throwOnChange, false);
        this._NgClass_11_3.ngDoCheck(this, this._el_11, throwOnChange);
    };
    View_LangBarComponent0.prototype.detachInternal = function () {
        var animationTransition_isLangBarOpenRTL = this.componentType.animations['isLangBarOpenRTL'](this, this._el_0, this._expr_18, 'void');
        var animationTransition_isLangBarOpenLTR = this.componentType.animations['isLangBarOpenLTR'](this, this._el_0, this._expr_19, 'void');
    };
    View_LangBarComponent0.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.toggleLangBarState() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LangBarComponent0.prototype.handleEvent_4 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            this.context.toEng();
            var pd_sub_0 = ($event.stopPropagation() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LangBarComponent0.prototype.handleEvent_7 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            this.context.toHeb();
            var pd_sub_0 = ($event.stopPropagation() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_LangBarComponent0;
}(import1.AppView));
exports.View_LangBarComponent0 = View_LangBarComponent0;
//# sourceMappingURL=lang-bar.component.ngfactory.js.map