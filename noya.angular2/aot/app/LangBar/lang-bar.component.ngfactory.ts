/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../app/LangBar/lang-bar.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../app/services/services';
import * as import9 from './lang-bar.component.css.shim.ngstyle';
import * as import10 from '@angular/core/src/animation/animation_transition';
import * as import11 from '@angular/core/src/animation/animation_sequence_player';
import * as import12 from '@angular/core/src/animation/animation_styles';
import * as import13 from '@angular/core/src/animation/animation_style_util';
import * as import14 from '@angular/core/src/animation/animation_keyframe';
import * as import15 from '@angular/core/src/animation/animation_player';
import * as import16 from '../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import17 from '@angular/core/src/change_detection/change_detection_util';
import * as import18 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import19 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from '@angular/common/src/directives/ng_class';
export class Wrapper_LangBarComponent {
  /*private*/ _eventHandler:Function;
  context:import0.LangBarComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.LangBarComponent(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_LangBarComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_LangBarComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.LangBarComponent>;
  _LangBarComponent_0_3:Wrapper_LangBarComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_LangBarComponent_Host0,renderType_LangBarComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'lang-bar',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_LangBarComponent0(this.viewUtils,this,0,this._el_0);
    this._LangBarComponent_0_3 = new Wrapper_LangBarComponent(this.injector(0),this.injectorGet(import8.CacheManager,this.parentIndex));
    this.compView_0.create(this._LangBarComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._LangBarComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.LangBarComponent) && (0 === requestNodeIndex))) { return this._LangBarComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._LangBarComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const LangBarComponentNgFactory:import7.ComponentFactory<import0.LangBarComponent> = new import7.ComponentFactory<import0.LangBarComponent>('lang-bar',View_LangBarComponent_Host0,import0.LangBarComponent);
const styles_LangBarComponent:any[] = [import9.styles];
var LangBarComponent_isLangBarOpenRTL_states:any = {
  '0': {},
  '1': {},
  'true': {'transform': 'translateX(0)'},
  'false': {'transform': 'translateX(-28px)'},
  '*': {}
}
;
function LangBarComponent_isLangBarOpenRTL_factory(view:import1.AppView<any>,element:any,currentState:any,nextState:any):import10.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'isLangBarOpenRTL'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = LangBarComponent_isLangBarOpenRTL_states['*'];
  var startStateStyles:any = LangBarComponent_isLangBarOpenRTL_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = LangBarComponent_isLangBarOpenRTL_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == '0') && (nextState == '1')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(-28px)'}]))),
        new import14.AnimationKeyframe(0.3,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(15px)'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(0)'}])))
      ]
    ,300,0,(null as any),previousPlayers)]);
    totalTime = 300;
  }
  if (((player == (null as any)) && ((currentState == '1') && (nextState == '0')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(0)'}]))),
        new import14.AnimationKeyframe(0.7,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(15px)'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(-28px)'}])))
      ]
    ,300,0,(null as any),previousPlayers)]);
    totalTime = 300;
  }
  if ((player == (null as any))) { (player = new import15.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import13.renderStyles(element,view.renderer,import13.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import11.AnimationSequencePlayer(previousPlayers).destroy();
  import13.renderStyles(element,view.renderer,import13.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'isLangBarOpenRTL',player);
  return new import10.AnimationTransition(player,currentState,nextState,totalTime);
}
var LangBarComponent_isLangBarOpenLTR_states:any = {
  '0': {},
  '1': {},
  'true': {'transform': 'translateX(0)'},
  'false': {'transform': 'translateX(28px)'},
  '*': {}
}
;
function LangBarComponent_isLangBarOpenLTR_factory(view:import1.AppView<any>,element:any,currentState:any,nextState:any):import10.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'isLangBarOpenLTR'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = LangBarComponent_isLangBarOpenLTR_states['*'];
  var startStateStyles:any = LangBarComponent_isLangBarOpenLTR_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = LangBarComponent_isLangBarOpenLTR_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == '0') && (nextState == '1')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(28px)'}]))),
        new import14.AnimationKeyframe(0.3,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(-15px)'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(0)'}])))
      ]
    ,300,0,(null as any),previousPlayers)]);
    totalTime = 300;
  }
  if (((player == (null as any)) && ((currentState == '1') && (nextState == '0')))) {
      player = new import11.AnimationSequencePlayer([view.renderer.animate(element,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(0)'}]))),
        new import14.AnimationKeyframe(0.7,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(-15px)'}]))),
        new import14.AnimationKeyframe(1,new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles,[{'transform': 'translateX(28px)'}])))
      ]
    ,300,0,(null as any),previousPlayers)]);
    totalTime = 300;
  }
  if ((player == (null as any))) { (player = new import15.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import13.renderStyles(element,view.renderer,import13.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import11.AnimationSequencePlayer(previousPlayers).destroy();
  import13.renderStyles(element,view.renderer,import13.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'isLangBarOpenLTR',player);
  return new import10.AnimationTransition(player,currentState,nextState,totalTime);
}
var renderType_LangBarComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_LangBarComponent,{
  'isLangBarOpenRTL': LangBarComponent_isLangBarOpenRTL_factory,
  'isLangBarOpenLTR': LangBarComponent_isLangBarOpenLTR_factory
}
);
export class View_LangBarComponent0 extends import1.AppView<import0.LangBarComponent> {
  _el_0:any;
  _NgClass_0_3:import16.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _NgClass_2_3:import16.Wrapper_NgClass;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _NgClass_11_3:import16.Wrapper_NgClass;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  _map_20:any;
  _map_21:any;
  _map_22:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_LangBarComponent0,renderType_LangBarComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_18 = import17.UNINITIALIZED;
    this._expr_19 = import17.UNINITIALIZED;
    this._map_20 = import3.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'main-wrp-ltr': p0,
        'main-wrp-rtl': p1
      }
      ;
    });
    this._map_21 = import3.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'main-wrp--lang-wrp-ltr': p0,
        'main-wrp--lang-wrp-rtl': p1
      }
      ;
    });
    this._map_22 = import3.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'main-wrp--toggle-wrp-ltr': p0,
        'main-wrp--toggle-wrp-rtl': p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','main-wrp pointer'),(null as any));
    this._NgClass_0_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import19.KeyValueDiffers,this.parentIndex),new import20.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray4(4,'class','main-wrp--lang-wrp','id',''),(null as any));
    this._NgClass_2_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import19.KeyValueDiffers,this.parentIndex),new import20.ElementRef(this._el_2),this.renderer);
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'eng',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_2,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'עבר',(null as any));
    this._text_9 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_10 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','main-wrp--toggle-wrp'),(null as any));
    this._NgClass_11_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import19.KeyValueDiffers,this.parentIndex),new import20.ElementRef(this._el_11),this.renderer);
    this._text_12 = this.renderer.createText(this._el_11,'\n    ',(null as any));
    this._text_13 = this.renderer.createText(this._el_0,'\n\n\n',(null as any));
    this._text_14 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_4));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_7,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_7));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._text_14
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.NgClass) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._NgClass_2_3.context; }
    if (((token === import21.NgClass) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._NgClass_11_3.context; }
    if (((token === import21.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 13)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_18:any = (this.context.isHeb? this.context.isLangBarOpen: (0 - 1));
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      var animationTransition_isLangBarOpenRTL:any = this.componentType.animations['isLangBarOpenRTL'](this,this._el_0,((this._expr_18 == import17.UNINITIALIZED)? 'void': this._expr_18),((currVal_18 == import17.UNINITIALIZED)? 'void': currVal_18));
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = (this.context.isEng? this.context.isLangBarOpen: (0 - 1));
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      var animationTransition_isLangBarOpenLTR:any = this.componentType.animations['isLangBarOpenLTR'](this,this._el_0,((this._expr_19 == import17.UNINITIALIZED)? 'void': this._expr_19),((currVal_19 == import17.UNINITIALIZED)? 'void': currVal_19));
      this._expr_19 = currVal_19;
    }
    const currVal_0_0_0:any = 'main-wrp pointer';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this._map_20(this.context.isEng,this.context.isHeb);
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = 'main-wrp--lang-wrp';
    this._NgClass_2_3.check_klass(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this._map_21(this.context.isEng,this.context.isHeb);
    this._NgClass_2_3.check_ngClass(currVal_2_0_1,throwOnChange,false);
    this._NgClass_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_11_0_0:any = 'main-wrp--toggle-wrp';
    this._NgClass_11_3.check_klass(currVal_11_0_0,throwOnChange,false);
    const currVal_11_0_1:any = this._map_22(this.context.isEng,this.context.isHeb);
    this._NgClass_11_3.check_ngClass(currVal_11_0_1,throwOnChange,false);
    this._NgClass_11_3.ngDoCheck(this,this._el_11,throwOnChange);
  }
  detachInternal():void {
    var animationTransition_isLangBarOpenRTL:any = this.componentType.animations['isLangBarOpenRTL'](this,this._el_0,this._expr_18,'void');
    var animationTransition_isLangBarOpenLTR:any = this.componentType.animations['isLangBarOpenLTR'](this,this._el_0,this._expr_19,'void');
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.toggleLangBarState()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      this.context.toEng();
      const pd_sub_0:any = ((<any>$event.stopPropagation()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      this.context.toHeb();
      const pd_sub_0:any = ((<any>$event.stopPropagation()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}